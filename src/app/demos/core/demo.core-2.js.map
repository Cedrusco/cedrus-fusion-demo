{"version":3,"file":"demo.core-2.js","sourceRoot":"","sources":["demo.core-2.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyD;AACzD,+CAA4C;AAC5C,+CAA2C;AAC3C,+CAAsD;AAEtD,+CAA4C;AAQ5C,IAAa,WAAW;IA8CpB,qBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QA7C5C,cAAS,GAAW,EAAE,CAAC;QAEvB,UAAK,GAAG,UAAU,CAAC;QAEnB,cAAS,GAAG;YACR,OAAO,EAAE,iBAAiB;YAC1B,QAAQ,EAAE,OAAO;SACpB,CAAC;QAEF,UAAK,GAAU,KAAK,CAAC;QAGrB,gBAAW,GAAG,IAAI,CAAC;QAEnB,eAAU,GAAG,EAAE,CAAC;QACnB,YAAO,GAAG,CAAC;gBACJ,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,KAAK;aACjB,EAAE;gBACC,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,QAAQ;aACpB,CAAC,CAAC;QAEH,YAAO,GAAE,IAAI,2BAAW,EAAG,CAAC;QAE5B,YAAO,GAAG,IAAI,2BAAW,CAAE;YAC7B,KAAK,EAAE,MAAM;YACb,YAAY,EAAC,OAAO;SACpB,CAAC,CAAC;QAEA,WAAM,GAAG,IAAI,0BAAU,CAAE;YACrB,IAAI,EAAG,MAAM;YACf,WAAW,EAAE,cAAc;YAC3B,SAAS,EAAG,IAAI;YAChB,IAAI,EAAG;gBACN,IAAI,EAAG,EAAE;gBACT,KAAK,EAAG,OAAO;aACf;YACC,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;SAClC,CAAC,CAAC;QAEA,gBAAW,GAAG,IAAI,qCAAqB,CAAE;YAC3C,WAAW,EAAE,OAAO;SACpB,CAAC,CAAC;IAE+C,CAAC;IAEhD,8BAAQ,GAAR;QACI,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAED,+BAAS,GAAT;QAAA,iBAMF;QALA,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;aACpC,IAAI,CAAC;YACF,0FAA0F;YAC1F,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACV,CAAC;IAEE,sCAAgB,GAAhB;QACI,iDAAiD;QACjD,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,+BAA+B,CAAC,CAAC;QAClF,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC;QAEvE,wFAAwF;QACxF,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC;QAEvF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtE,CAAC;IACL,kBAAC;AAAD,CAAC,AAtED,IAsEC;AAtEY,WAAW;IANvB,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,gBAAgB;QAC1B,WAAW,EAAE,oBAAoB;QACjC,SAAS,EAAE,CAAC,oBAAoB,CAAC;KAClC,CAAC;qCA+CmC,2BAAW;GA9CnC,WAAW,CAsEvB;AAtEY,kCAAW","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { ButtonModel } from 'cedrus-fusion';\nimport { InputModel } from 'cedrus-fusion';\nimport { WeatherComponentModel } from 'cedrus-fusion';\n\nimport { I18NService } from 'cedrus-fusion';\n\n@Component({\n  moduleId: module.id,\n  selector: 'cf-demo-core-2',\n  templateUrl: './demo.core-2.html',\n  styleUrls: ['./demo.core-2.scss']\n})\nexport class CfDemoCore2 implements OnInit {\n    themeName: string = '';\n\n    title = \"DemoCore\";\n\n    myTooltip = {\n        message: \"My Test Tooltip\",\n        position: \"above\"\n    };\n\n    money:number = 10000;\n    moneyFormatted: string;\n\n    enabledI18N = true;\n\n    localeName = \"\";\n\tlocales = [{\n        \"value\": \"en-US\",\n        \"title\": \"USA\"\n    }, {\n        \"value\": \"fr-FR\",\n        \"title\": \"France\"\n    }];\n\n    button1= new ButtonModel ();\n\n    button2 = new ButtonModel ({\n\t\tlabel: 'Date',\n\t\ticonPosition:\"right\"\n\t});\n\n    input1 = new InputModel ({\n        type : \"text\",\n    \t\tplaceholder: \"current date\",\n    \t\tmaxlength : \"10\",\n    \t\thint : {\n    \t\t\ttext : \"\",\n    \t\t\talign : \"start\"\n    \t\t},\n        value: new Date().toString()\n\t});\n\n    demoWeather = new WeatherComponentModel ({\n\t\tdefaultCity: \"Paris\"\n\t});\n\n    constructor(private i18nService: I18NService) {}\n\n    ngOnInit() {\n        this.internationalize();\n    }\n\n    setLocale(): void {\n\t\tthis.i18nService.setLocale(this.localeName)\n        .then(() => {\n            // after resetting locale, we have to reset localized messages from new current dictionary\n            this.internationalize();\n        });\n\t}\n\n    internationalize(): void {\n        // get localized messages from current dictionary\n        this.myTooltip.message = this.i18nService.lookup('customer.form.tooltip.message');\n        this.button1.label = this.i18nService.lookup('customer.form.validate');\n\n        //this.input1.value = this.i18nService.formatDateWithTokens(new Date().toString(), 'L');\n        this.button2.label = this.i18nService.formatDateWithTokens(new Date().toString(), 'L');\n\n        this.moneyFormatted = this.i18nService.formatCurrency(this.money);\n    }\n}\n"]}